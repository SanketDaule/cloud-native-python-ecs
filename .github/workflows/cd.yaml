name: Continuous Deployment to AWS 

# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request: 
#     branches: 
#       - main
#       - develop
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/github-actions-code-build
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t cloud-native-ecs-python-app .
          docker tag rock-paper-scissors-app:latest ${{ steps.login-ecr.outputs.registry }}/cloud-native-ecs-python-app:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/cloud-native-ecs-python-app:latest

      - name: Output image URL
        run: |
          echo "Image URL: ${{ steps.login-ecr.outputs.registry }}/cloud-native-ecs-python-app:latest"

  deploy:
    runs-on: ubuntu-latest

    # Run for specific branches only
    if: |
      github.event_name == 'push' &&
      (github.ref_name == 'main' || github.ref_name == 'develop')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine environment
        id: env_selector
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "develop" ]]; then
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to AWS
        uses: ./.github/actions/deploy
        with:
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          environment: ${{ steps.env_selector.outputs.env }}
